<?php

namespace App\Models;

use Phalcon\Validation\Validator\Email as EmailValidator;
use Phalcon\Validation;

/**
 * User
 * 
 * @package App\Models
 * @autogenerated by Phalcon Developer Tools
 * @date 2019-06-22, 21:34:39
 */
class User extends \Phalcon\Mvc\Model
{

    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(column="id", type="integer", length=11, nullable=false)
     */
    public $id;

    /**
     *
     * @var string
     * @Column(column="email", type="string", length=300, nullable=false)
     */
    public $email;

    /**
     *
     * @var string
     * @Column(column="password", type="string", length=700, nullable=false)
     */
    public $password;

    /**
     *
     * @var string
     * @Column(column="name", type="string", length=300, nullable=false)
     */
    public $name;

    /**
     *
     * @var string
     * @Column(column="surname", type="string", length=300, nullable=false)
     */
    public $surname;

    /**
     *
     * @var string
     * @Column(column="birthdate", type="string", nullable=false)
     */
    public $birthdate;

    /**
     *
     * @var string
     * @Column(column="time_of_creation", type="string", nullable=false)
     */
    public $time_of_creation;

    /**
     *
     * @var integer
     * @Column(column="active", type="integer", length=1, nullable=false)
     */
    public $active;

    /* cant override public function __construct($data, $di, $modelsManager)
    {
        if(key_exists('birthdate', $data)) {
            $data['birthdate'] = date('d-m-Y', strtotime($data['birthdate']));
        }
        parent::__construct($data, $di, $modelsManager);
    }*/

    /**
     * Validations and business logic
     *
     * @return boolean
     */
    public function validation()
    {
        $validator = new Validation();

        $validator->add(
            'email',
            new EmailValidator(
                [
                    'model'   => $this,
                    'message' => 'Please enter a correct email address',
                ]
            )
        );

        return $this->validate($validator);
    }

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->setSchema("alternative_clothing");
        $this->setSource("user");
        $this->hasMany('id', 'App\Models\Address', 'user_id', ['alias' => 'Address']);

        //$this->birthdate = date('d-m-Y', strtotime($this->birthdate));
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return User[]|User|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return User|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'user';
    }

    /**
     * Check wether the user is valid or not
     * @return bool
     */
    public function isValid() {
        return !empty($this->email) && 
            !empty($this->password) && 
            !empty($this->name) && 
            !empty($this->surname) && 
            !empty($this->birthdate);
    }

}
